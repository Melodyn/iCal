name: Production CI

on:
  push:
    branches: main

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    services:
      postgres:
        image: library/postgres:12
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ical_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: make install-dependencies
    - run: make test
    - run: make lint

  deploy:
    needs: pre-deploy
    environment: prodcution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: melodyn-ical
          heroku_email: samelodyn@gmail.com
          branch: main
        env:
          HD_NODE_ENV: production
          HD_HOST: 0.0.0.0
          HD_LOG_LEVEL: info
          HD_DB_TYPE: ${{ secretes.DB_TYPE }}
          HD_DB_HOST: ${{ secretes.DB_HOST }}
          HD_DB_PORT: ${{ secretes.DB_PORT }}
          HD_DB_USER: ${{ secretes.DB_USER }}
          HD_DB_PASS: ${{ secretes.DB_PASS }}
          HD_DB_NAME: ${{ secretes.DB_NAME }}
          HD_VK_APP_ID: ${{ secretes.VK_APP_ID }}
          HD_VK_PROTECTED_KEY: ${{ secretes.VK_PROTECTED_KEY }}
          HD_VK_SERVICES_KEY: ${{ secretes.VK_SERVICES_KEY }}
